<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解装配-->
    <context:component-scan base-package="cn.edu.hbsi">
    <!--表示在组件扫描时排除带有 @Mapper 注解的类/接口-->
    <!--因为MyBatis 的 Mapper 接口已经由 MapperScannerConfigurer 专门处理-->
    <context:exclude-filter type="annotation" expression="org.apache.ibatis.annotations.Mapper"/>
    </context:component-scan>

    <!--MyBatis和Spring整合-->
    <!--引入数据库配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置数据源-->
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>
    <!--配置JDBC模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--创建SqlSessionFactoryBean对象-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <!--获取数据源-->
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="cn.edu.hbsi.domain"/>
        <!-- 显式指定 mapper 文件位置 -->
        <property name="mapperLocations" value="classpath:cn/edu/hbsi/dao/*.xml"/>
    </bean>
    <!--扫描dao包，创建动态代理对象，由spring容器管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定要扫描的dao包-->
        <property name="basePackage" value="cn.edu.hbsi.dao"/>
        <!--告诉 MapperScannerConfigurer 应该使用 Spring 容器中哪个已定义的 SqlSessionFactory Bean-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--只扫描带有特定注解（如 @Mapper）的接口-->
        <property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>
    </bean>
</beans>